const nsNgPolyfills = true;
global.performance ??= {};
function getPerformanceObject() {
    const loadTime = Date.now();
    const performance = {
        timeOrigin: loadTime,
        now() {
            return Date.now() - loadTime;
        },
        mark(name, options) {
            return {
                detail: options?.detail,
                duration: 0,
                entryType: 'mark',
                name,
                startTime: options?.startTime ?? Date.now() - loadTime,
                toJSON: () => {
                    ('');
                },
            };
        },
    };
    return performance;
}
const polyfilledPerformance = getPerformanceObject();
for (const key in polyfilledPerformance) {
    global.performance[key] ??= polyfilledPerformance[key];
}
if (typeof queueMicrotask === 'undefined') {
    global.queueMicrotask = (cb) => Promise.resolve().then(cb);
}

/**
 * Generated bundle index. Do not edit.
 */

export { nsNgPolyfills };
//# sourceMappingURL=nativescript-angular-polyfills.mjs.map
